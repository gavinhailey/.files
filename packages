#!/bin/zsh

DOTFILES_PATH="$(cd "$(dirname "${BASH_SOURCE[0]}")" && pwd)"


function install_pyenv {
  DEFAULT_PYTHON_VERSION="3.9.16"
  echo "Installing pyenv and python ${DEFAULT_PYTHON_VERSION}"
  brew install pyenv
  echo "alias brew='env PATH="${PATH//$(pyenv root)\/shims:/}" brew'" >> ~/.zshrc
  source ~/.zshrc || true
  pyenv install ${DEFAULT_PYTHON_VERSION}
  pyenv global ${DEFAULT_PYTHON_VERSION}
  pyenv rehash
}

function install_python_poetry {
  echo "Installing python poetry"
  curl -sSL https://install.python-poetry.org | python3 -
}

function install_rbenv {
  echo "Installing rbenv"
  brew install rbenv ruby-build
}

function install_go {
  echo "Installing go"
  brew install go
}

function install_nvm {
  echo "Installing nvm"
  brew install nvm
  nvm install --lts && nvm use --lts
}

function install_jenv {
  echo "Installing jenv"
  brew install jenv
  brew install openjdk@11
  sudo ln -sfn /opt/homebrew/opt/openjdk@11/libexec/openjdk.jdk /Library/Java/JavaVirtualMachines/openjdk-11.jdk
  jenv add "$(/usr/libexec/java_home)"
}

function install_rust {
  echo "Installing rust"
  curl --proto '=https' --tlsv1.2 -sSf https://sh.rustup.rs | bash -s -- -y --no-modify-path
}

function install_julia {
  # juliaup doesn't like the no-add-to-path option right now, so this will be added later
  echo "Installing julia"
  curl -fsSL https://install.julialang.org | bash -s -- -y --no-add-to-path
}

function install_docker_colima {
  echo "Installing docker + colima"
  brew install colima docker docker-compose docker-credential-helper
  mkdir -p "${HOME}/.docker/cli-plugins"
  ln -sfn "$(brew --prefix docker-compose)/bin/docker-compose" "${HOME}/.docker/cli-plugins/docker-compose"
  ln -sfn $DOTFILES_PATH/docker/config.json ~/.docker/config.json
  saml2aws exec --exec-profile monolith -- aws ecr get-login-password \
    | docker login --username AWS --password-stdin "264606497040.dkr.ecr.us-east-1.amazonaws.com"
}

function install_neovim {
  echo "Installing neovim"
  brew install neovim
  LV_BRANCH='release-1.2/neovim-0.8' bash <(curl -s https://raw.githubusercontent.com/lunarvim/lunarvim/fc6873809934917b470bff1b072171879899a36b/utils/installer/install.sh)
  git clone https://github.com/nvim-lua/kickstart.nvim.git $HOME/.config/nvim
}

function install_oh_my_zsh {
  echo "Installing oh-my-zsh"
  sh -c "$(curl -fsSL https://raw.githubusercontent.com/ohmyzsh/ohmyzsh/master/tools/install.sh)"

  # zsh plugins
  echo "Installing oh-my-zsh plugins"
  git clone https://github.com/onyxraven/zsh-osx-keychain.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/zsh-osx-keychain
  git clone https://github.com/zsh-users/zsh-autosuggestions ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/zsh-autosuggestions
  git clone https://github.com/zsh-users/zsh-syntax-highlighting.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/zsh-syntax-highlighting
  git clone --depth=1 https://github.com/marlonrichert/zsh-autocomplete.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/plugins/zsh-autocomplete
  git clone --depth=1 https://github.com/romkatv/powerlevel10k.git ${ZSH_CUSTOM:-$HOME/.oh-my-zsh/custom}/themes/powerlevel10k

  # add plugin and theme autoupdates
  

  # restart shell
  echo "Configure p10k..."
  source ~/.zshrc || true
  p10k configure
}

function install_my_zshrc {
  echo "Installing my zshrc"
  rm -f ~/.zshrc
  ln -sfn $DOTFILES_PATH/zshrc ~/.zshrc
}

function install_ssh_config {
  echo "Installing ssh config"
  mkdir -p ~/.ssh
  rm -f ~/.ssh/config
  ln -sfn $DOTFILES_PATH/ssh/config ~/.ssh/config
}

function install_gitconfig {
  echo "Installing gitconfig"
  rm -f ~/.gitconfig
  ln -sfn $DOTFILES_PATH/gitconfig ~/.gitconfig
}

